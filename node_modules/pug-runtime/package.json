{
  "_args": [
    [
      {
        "raw": "pug-runtime@^2.0.5",
        "scope": null,
        "escapedName": "pug-runtime",
        "name": "pug-runtime",
        "rawSpec": "^2.0.5",
        "spec": ">=2.0.5 <3.0.0",
        "type": "range"
      },
      "D:\\ExpressJS-CoderX\\node_modules\\pug"
    ]
  ],
  "_from": "pug-runtime@^2.0.5",
  "_hasShrinkwrap": false,
  "_id": "pug-runtime@2.0.5",
  "_location": "/pug-runtime",
  "_nodeVersion": "11.14.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/pug-runtime_2.0.5_1560851095151_0.27996222358798906"
  },
  "_npmUser": {
    "name": "forbeslindesay",
    "email": "forbes@lindesay.co.uk"
  },
  "_npmVersion": "lerna/3.10.8/node@v11.14.0+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pug-runtime@^2.0.5",
    "scope": null,
    "escapedName": "pug-runtime",
    "name": "pug-runtime",
    "rawSpec": "^2.0.5",
    "spec": ">=2.0.5 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pug",
    "/pug-attrs",
    "/pug-code-gen"
  ],
  "_resolved": "https://registry.npmjs.org/pug-runtime/-/pug-runtime-2.0.5.tgz",
  "_shasum": "6da7976c36bf22f68e733c359240d8ae7a32953a",
  "_shrinkwrap": null,
  "_spec": "pug-runtime@^2.0.5",
  "_where": "D:\\ExpressJS-CoderX\\node_modules\\pug",
  "author": {
    "name": "ForbesLindesay"
  },
  "browser": {
    "fs": false
  },
  "dependencies": {},
  "description": "The runtime components for the pug templating language",
  "devDependencies": {
    "uglify-js": "^2.6.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-P+rXKn9un4fQY77wtpcuFyvFaBww7/91f3jHa154qU26qFAnOe6SW1CbIDcxiG5lLK9HazYrMCCuDvNgDQNptw==",
    "shasum": "6da7976c36bf22f68e733c359240d8ae7a32953a",
    "tarball": "https://registry.npmjs.org/pug-runtime/-/pug-runtime-2.0.5.tgz",
    "fileCount": 10,
    "unpackedSize": 16528,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCLKXCRA9TVsSAnZWagAAE6IP/Rey1fXRtlxl4NHO6DaK\nmNo7Qa7OiXkHJfF/FIlIku4jJ5m6pZf5GEGPxXFuN0JuwImKhiMWca3Tkm16\naxFYcTeSlJZ/JGLDC6/2aTuhGvv2oX8Yz+clMZe4a/bVxi/YojgwapNU+v+M\n3Eqcfzo2nQgHDrYUVxxb9jgZnngZ1kDILxy52TxZtQ94RFABi8iK5nJXjsbB\nRoOtbEfiAQpxVNyHhT77ou61VuwqYw38GAnC/MheTJkb+qG+gP1+V2WkdiSu\nxzef2bqYDAt3oAptzmRedoWNsk5J37b0nMA3JlWajDJvf1nnMXamsxywMiuy\n2WLEQ+OHPmXQ0PS53G3QGA8zSFg2De2znrQ5B24UtB3cjoBICaXzwL1/9/bv\ngTXyYe9AA9uaLmK14rqpwDuf250XiIzpbhOY3s2jEwHxBiqqUUz9gOKAChBZ\nn3Nk4TTipWHV4n0SKhpZQqai9BAzYhnHFhVIt81HJK+Jv7lwC/AxtTZyh1ne\nRUb9Q39rU6uE3OCbqC3DzPgOdNgnMNYieZGjuxsMAMgzD3Th6O8aAXqCguPh\n6B2z8r3MXibYLLuk1d0l/NXztrSIz1kIYlm08jYTPCo2QGyWVRHHkHqbfPLO\n5Xk+GyWaOLbBXvTp3cTTiaSa11ocmu9ddwQHzS10Kbh7MmxHz3Ro4X7DTcfV\nbVzA\r\n=sfN/\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "build.js",
    "index.js",
    "lib/dependencies.js",
    "lib/internals.js",
    "lib/sources.js",
    "wrap.js"
  ],
  "gitHead": "1bdf628a70fda7a0d840c52f3abce54b1c6b0130",
  "keywords": [
    "pug"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    },
    {
      "name": "timothygu",
      "email": "timothygu99@gmail.com"
    }
  ],
  "name": "pug-runtime",
  "optionalDependencies": {},
  "readme": "# pug-runtime\n\nThe runtime components for the pug templating language\n\n[![Build Status](https://img.shields.io/travis/pugjs/pug-runtime/master.svg)](https://travis-ci.org/pugjs/pug-runtime)\n[![Dependencies Status](https://david-dm.org/pugjs/pug/status.svg?path=packages/pug-runtime)](https://david-dm.org/pugjs/pug?path=packages/pug-runtime)\n[![DevDependencies Status](https://david-dm.org/pugjs/pug/dev-status.svg?path=packages/pug-runtime)](https://david-dm.org/pugjs/pug?path=packages/pug-runtime&type=dev)\n[![NPM version](https://img.shields.io/npm/v/pug-runtime.svg)](https://www.npmjs.org/package/pug-runtime)\n\n## Installation\n\n    npm install pug-runtime\n\n## Usage\n\n\nYou can call runtime methods directly using `runtime.method`.  This is particularly useful when compiling to deal with things that are already known at compile time.\n\n```js\nvar runtime = require('pug-runtime');\n\nassert(runtime.attr('foo', 'bar', true, true) === ' foo=\"bar\"');\n```\n\nYou can also build a string with a given list of functions available as `pug_method` by calling `build(arrayOfMethods)`.  This is useful for inlining runtime functions within the compiled templates.\n\n```js\nvar build = require('pug-runtime/build');\nvar src = build(['attr']);\n\nvar attr = Function('', src + ';return pug_attr;')();\nassert(attr('foo', 'bar', true, true) === ' foo=\"bar\"');\n```\n\nWhen testing code compiled for the browser in Node.js, it is necessary to make the runtime available. To do so, one can use `require('pug-runtime/wrap')`:\n\n```js\nvar pug = require('pug');\nvar wrap = require('pug-runtime/wrap');\n\nvar pugSrc = 'p= content';\n// By default compileClient automatically embeds the needed runtime functions,\n// rendering this module useless.\nvar compiledCode = pug.compileClient(pugSrc, {\n  externalRuntime: true\n});\n//=> 'function template (locals) { ... pug.escape() ... }'\n\nvar templateFunc = wrap(compiledCode);\ntemplateFunc({content: 'Hey!'});\n//=> '<p>Hey!</p>'\n\n// Change template function name to 'heyTemplate'\ncompiledCode = pug.compileClient(pugSrc, {\n  externalRuntime: true,\n  name: 'heyTemplate'\n});\n//=> 'function heyTemplate (locals) { ... }'\n\ntemplateFunc = wrap(compiledCode, 'heyTemplate');\ntemplateFunc({content: 'Hey!'});\n//=> '<p>Hey!</p>'\n```\n\n\n## License\n\n  MIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/pugjs/pug/tree/master/packages/pug-runtime"
  },
  "scripts": {
    "prepublish": "node prepublish",
    "pretest": "npm run prepublish"
  },
  "version": "2.0.5"
}
