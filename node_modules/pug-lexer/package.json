{
  "_args": [
    [
      {
        "raw": "pug-lexer@^4.1.0",
        "scope": null,
        "escapedName": "pug-lexer",
        "name": "pug-lexer",
        "rawSpec": "^4.1.0",
        "spec": ">=4.1.0 <5.0.0",
        "type": "range"
      },
      "D:\\ExpressJS-CoderX\\node_modules\\pug"
    ]
  ],
  "_from": "pug-lexer@^4.1.0",
  "_hasShrinkwrap": false,
  "_id": "pug-lexer@4.1.0",
  "_location": "/pug-lexer",
  "_nodeVersion": "11.14.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/pug-lexer_4.1.0_1560851100418_0.369324707375575"
  },
  "_npmUser": {
    "name": "forbeslindesay",
    "email": "forbes@lindesay.co.uk"
  },
  "_npmVersion": "lerna/3.10.8/node@v11.14.0+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pug-lexer@^4.1.0",
    "scope": null,
    "escapedName": "pug-lexer",
    "name": "pug-lexer",
    "rawSpec": "^4.1.0",
    "spec": ">=4.1.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pug"
  ],
  "_resolved": "https://registry.npmjs.org/pug-lexer/-/pug-lexer-4.1.0.tgz",
  "_shasum": "531cde48c7c0b1fcbbc2b85485c8665e31489cfd",
  "_shrinkwrap": null,
  "_spec": "pug-lexer@^4.1.0",
  "_where": "D:\\ExpressJS-CoderX\\node_modules\\pug",
  "author": {
    "name": "ForbesLindesay"
  },
  "dependencies": {
    "character-parser": "^2.1.1",
    "is-expression": "^3.0.0",
    "pug-error": "^1.3.3"
  },
  "description": "The pug lexer (takes a string and converts it to an array of tokens)",
  "devDependencies": {
    "acorn": "^3.0.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-i55yzEBtjm0mlplW4LoANq7k3S8gDdfC6+LThGEvsK4FuobcKfDAwt6V4jKPH9RtiE3a2Akfg5UpafZ1OksaPA==",
    "shasum": "531cde48c7c0b1fcbbc2b85485c8665e31489cfd",
    "tarball": "https://registry.npmjs.org/pug-lexer/-/pug-lexer-4.1.0.tgz",
    "fileCount": 5,
    "unpackedSize": 47140,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCLKdCRA9TVsSAnZWagAAp90P/1+NNIbRQYvvcBAm6Wg6\nPlQ8vEJaA1YA3pmDRvFjqh6t1yYywOMIsAyt6KuuNu10SbuF662t4kzGGAyY\nTNctsj2zxxEgfkhqdUfXEWDfgnOJ5aOgkBy+VR9P211L9K3TEYYmmjXz8NoX\n4RLyCMvtPOYjZqmPG+iReQYM5o5tCAUqZoxoDdNp30WmDU5HGLr+gaOe9Ig9\nuEivNxKxUTOv8vtourHFvHpCqlMooG+O34eVF+9CUliqBqa/AKBt/JIoVGRg\noOiFCdXCshH9hfO/TP3LEYYojIcTECuL+wWgUjxN/u2exv4uPpxO0aJpijxW\nbJUDAd7hQJpzkOsZgQk5rgd4lIRsWpo2v475MS9R9UVySiz6fn+aOzm/7Eaz\nINPoq3yg3Vutm29+ZQJwpzRXCf/F1yPkLn4Uvtv8DSiJoVyOinD8M3YoNHu5\nb3hQ9rjopFITDYk6xiBIzP9j7DFxoPgAin2A8bfevcTnOBLPtVgZuIUu3otg\nTHrNWoTfSm7SIxbhkpNxlLD04uO1mYa9fn7IY/piydX6KP4mzwxf7fkZjbbO\nsSpPApJVLU6Fn470BvquW/UBoCKN8RmIv/AGaXzua64YfVE8Uoh6FB+V91XV\nQTs8JZlUW172sR7BFCl35SAv92Nt0IaLeBze2PyTdm1VA6nxVJ7J2HWjRja+\n3JJA\r\n=W3bh\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "1bdf628a70fda7a0d840c52f3abce54b1c6b0130",
  "keywords": [
    "pug"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    },
    {
      "name": "timothygu",
      "email": "timothygu99@gmail.com"
    }
  ],
  "name": "pug-lexer",
  "optionalDependencies": {},
  "readme": "# pug-lexer\n\nThe pug lexer.  This module is responsible for taking a string and converting it into an array of tokens.\n\n[![Build Status](https://img.shields.io/travis/pugjs/pug-lexer/master.svg)](https://travis-ci.org/pugjs/pug-lexer)\n[![Dependencies Status](https://david-dm.org/pugjs/pug/status.svg?path=packages/pug-lexer)](https://david-dm.org/pugjs/pug?path=packages/pug-lexer)\n[![DevDependencies Status](https://david-dm.org/pugjs/pug/dev-status.svg?path=packages/pug-lexer)](https://david-dm.org/pugjs/pug?path=packages/pug-lexer&type=dev)\n[![NPM version](https://img.shields.io/npm/v/pug-lexer.svg)](https://www.npmjs.org/package/pug-lexer)\n[![Coverage Status](https://img.shields.io/codecov/c/github/pugjs/pug-lexer.svg)](https://codecov.io/gh/pugjs/pug-lexer)\n\n## Installation\n\n    npm install pug-lexer\n\n## Usage\n\n```js\nvar lex = require('pug-lexer');\n```\n\n### `lex(str, options)`\n\nConvert Pug string to an array of tokens.\n\n`options` can contain the following properties:\n\n- `filename` (string): The name of the Pug file; it is used in error handling if provided.\n- `plugins` (array): An array of plugins, in the order they should be applied.\n\n```js\nconsole.log(JSON.stringify(lex('div(data-foo=\"bar\")', {filename: 'my-file.pug'}), null, '  '))\n```\n\n```json\n[\n  {\n    \"type\": \"tag\",\n    \"line\": 1,\n    \"val\": \"div\",\n    \"selfClosing\": false\n  },\n  {\n    \"type\": \"attrs\",\n    \"line\": 1,\n    \"attrs\": [\n      {\n        \"name\": \"data-foo\",\n        \"val\": \"\\\"bar\\\"\",\n        \"escaped\": true\n      }\n    ]\n  },\n  {\n    \"type\": \"eos\",\n    \"line\": 1\n  }\n]\n```\n\n### `new lex.Lexer(str, options)`\n\nConstructor for a Lexer class. This is not meant to be used directly unless you know what you are doing.\n\n`options` may contain the following properties:\n\n- `filename` (string): The name of the Pug file; it is used in error handling if provided.\n- `interpolated` (boolean): if the Lexer is created as a child lexer for inline tag interpolation (e.g. `#[p Hello]`). Defaults to `false`.\n- `startingLine` (integer): the real line number of the first line in the input. It is also used for inline tag interpolation. Defaults to `1`.\n- `plugins` (array): An array of plugins, in the order they should be applied.\n\n## License\n\n  MIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/pugjs/pug/tree/master/packages/pug-lexer"
  },
  "version": "4.1.0"
}
